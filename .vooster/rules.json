{
  "rules": [
    {
      "type": "prd",
      "content": "# 제품 요구사항 문서 (PRD)\n\n## 1. Executive Summary\n리디북스 웹사이트에서 사용자가 특정 출판사 또는 도서명을 필터링해 목록에서 숨길 수 있도록 지원하는 크롬 확장 프로그램이다. 불필요한 콘텐츠를 제거해 검색 효율성과 독서 경험을 향상시키며 개인화된 전자책 탐색을 가능하게 한다.\n\n## 2. Problem Statement\n- 리디북스의 방대한 도서 목록 중 사용자는 관심 없는 출판사/도서를 반복적으로 마주치며 탐색 피로를 느낀다.  \n- 기본 제공되는 검색·필터 기능만으로는 세밀한 배제(필터-아웃)가 불가능하다.  \n- 사용자는 원하지 않는 결과를 일일이 무시하거나 스크롤해야 하는 비효율을 겪는다.\n\n## 3. Goals and Objectives\n- Primary Goal: 특정 출판사/도서명을 사용자가 지정해 결과 목록에서 자동으로 제거\n- Secondary Goals:  \n  - UI/UX 단순화 및 직관적 조작  \n  - 필터 리스트 동기화(로그인 사용자) 및 백업/복원 지원  \n  - 필터 적용 상태 시각적 표시 및 실시간 반영\n- Success Metrics:  \n  - 30일 내 일간 활성이용자(Daily Active Users) 1,000명 달성  \n  - 필터 설정 후 평균 탐색 시간 25% 감소  \n  - 사용자 만족도 설문(5점 척도) 4.0 이상\n\n## 4. Target Audience\n### Primary Users\n- 20~40대 전자책 마니아, 특정 장르·출판사 취향이 뚜렷한 독자  \n- 반복 구매 고객, RSS/알림 기능을 적극 활용하는 파워 유저\n### Secondary Users\n- 리디북스 커뮤니티 리뷰어, 서평 블로거  \n- 출판사/콘텐츠 큐레이터(시장 조사를 위해 필요 없는 데이터 제거)\n\n## 5. User Stories\n- “전문 서적만 찾는 독자로서, 특정 로맨스 출판사를 숨겨서 검색 시간을 줄이고 싶다.”  \n- “시리즈 중복 노출을 피하고 싶어, 이미 가지고 있는 도서명을 필터링하여 안 보이게 하고 싶다.”  \n- “다른 PC에서도 동일한 필터를 쓰기 위해 계정 간 설정을 동기화하고 싶다.”  \n- “필터가 작동 중임을 한눈에 보고, 잠시 해제할 수 있으면 좋겠다.”\n\n## 6. Functional Requirements\n### Core Features\n1. 출판사 필터링  \n   - 설명: 사용자가 입력 또는 선택한 출판사명을 기준으로 결과 목록에서 해당 출판사 도서 카드를 DOM 상에서 제거  \n   - Acceptance Criteria:  \n     * 확장 아이콘 클릭 → 팝업 UI에서 출판사 입력 후 ‘추가’ 버튼 클릭 시 즉시 목록 재렌더링  \n     * 필터리스트에 추가된 출판사 수를 배지로 표시  \n     * 필터링 해제 시 목록이 원래대로 복원\n\n2. 도서명(키워드) 필터링  \n   - 설명: 제목 내 포함 문자열 매칭으로 숨김 처리  \n   - Acceptance Criteria:  \n     * 대·소문자, 공백 무관 부분 매칭  \n     * 50개 키워드까지 등록 가능(입력 시 중복 검증)  \n     * 키워드 우선순위 드래그&드롭 정렬\n\n3. 실시간 필터 적용  \n   - 설명: 사용자가 리디북스 페이지 내 스크롤·페이지네이션 시 AJAX 로드되는 신규 카드에도 필터 규칙 즉시 적용  \n   - Acceptance Criteria:  \n     * MutationObserver 또는 IntersectionObserver 활용으로 100ms 내 필터링 완료  \n     * FPS 저하 없이 Smooth Scroll 유지(> 50fps)\n\n### Supporting Features\n- 임시 비활성화 Toggle: 5분/30분/영구 옵션  \n- 필터 임포트·익스포트(JSON)  \n- 다국어 UI(한국어·영어)  \n- 다크모드 자동 연동  \n- 통계 대시보드: 일별 숨김 도서 수, 절감 시간 추정\n\n## 7. Non-Functional Requirements\n- Performance: 페이지 렌더 지연 200ms 이하, CPU 점유 10% 미만  \n- Security: Chrome Extension Content Security Policy 준수, 로컬 스토리지 암호화(Optional)  \n- Usability: 최대 3클릭 내 필터 등록, Material Design 준수  \n- Scalability: 규칙 1,000개까지 성능 유지  \n- Compatibility: Chrome v110+, Edge Chromium, 리디북스 Web 최신 레이아웃 추적\n\n## 8. Technical Considerations\n- Architecture: Manifest V3 기반, background service worker + content script  \n- Data Storage: chrome.storage.sync (로그인 시 Google 계정 연동), fallback localStorage  \n- Core Libraries:  \n  - UI: Svelte or React + Vite  \n  - Parsing: DOMParser, CSS Selector 리스트  \n- Testing: Jest + Puppeteer 자동화, Lighthouse 성능 측정  \n- CI/CD: GitHub Actions → Chrome Web Store 자동 배포(Manual Review 단계 알림)  \n- Third-Party: day.js, i18next\n\n## 9. Success Metrics and KPIs\n- DAU, MAU, Retention D7/D30  \n- 평균 세션당 숨김 도서 수  \n- 사용자 피드백 NPS ≥ 40  \n- 크래시율 < 0.5%  \n- 평균 컨텐츠 스크롤 길이 20% 감소\n\n## 10. Timeline and Milestones\n- Phase 1 (MVP) – 6주  \n  * 주1: 요구사항 확정, 디자인 가이드  \n  * 주2-4: 출판사/도서명 필터 기능, 기본 UI  \n  * 주5: 크로스브라우저 테스트, QA  \n  * 주6: Chrome Web Store 베타 출시\n- Phase 2 – 4주  \n  * 동기화, 임포트/익스포트, 다크모드, 통계 대시보드\n- Phase 3 – 4주  \n  * AI 추천 필터(예: 읽지 않을 확률 높은 도서 제안), 다국어 지원 확대, Edge Store 배포\n\n## 11. Risks and Mitigation\n- 리디북스 UI 변경 → CSS Selector 의존성 붕괴  \n  · Mitigation: 지속적 e2e 테스트, Selector Abstraction Layer 구축  \n- Chrome Manifest V3 제약으로 인한 퍼포먼스 문제  \n  · Mitigation: service worker 최적화, lazy load  \n- 사용자 저작권 오해(콘텐츠 차단 vs 불법 다운로드 혼동)  \n  · Mitigation: FAQ·가이드 명확 표기, 커뮤니티 모니터링\n\n## 12. Future Considerations\n- AI 기반 추천 차단(사용자 행동 분석)  \n- 모바일 브라우저 확장(PWA)  \n- 필터 공유 마켓플레이스(커뮤니티)  \n- 오픈소스 전환 및 외부 기여 유도",
      "writedAt": "2025-07-09T12:19:32.786Z"
    }
  ]
}